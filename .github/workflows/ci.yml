name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  XCODE_VERSION: '15.0'
  IOS_SIMULATOR: 'iPhone 15'
  IOS_VERSION: '17.0'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-13
    
    strategy:
      matrix:
        scheme: ['VOICE-Dev']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ env.XCODE_VERSION }}
    
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Show available simulators
      run: xcrun simctl list devices
      
    - name: Cache DerivedData
      uses: actions/cache@v3
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-derived-data-${{ hashFiles('**/VOICE.xcodeproj/**') }}
        restore-keys: |
          ${{ runner.os }}-derived-data-
    
    - name: Clean build folder
      run: |
        xcodebuild clean \
          -project VOICE/VOICE.xcodeproj \
          -scheme ${{ matrix.scheme }} \
          -destination 'platform=iOS Simulator,name=${{ env.IOS_SIMULATOR }},OS=${{ env.IOS_VERSION }}'
    
    - name: Build
      run: |
        xcodebuild build \
          -project VOICE/VOICE.xcodeproj \
          -scheme ${{ matrix.scheme }} \
          -destination 'platform=iOS Simulator,name=${{ env.IOS_SIMULATOR }},OS=${{ env.IOS_VERSION }}' \
          -derivedDataPath DerivedData \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          | xcpretty && exit ${PIPESTATUS[0]}
    
    - name: Run tests
      run: |
        xcodebuild test \
          -project VOICE/VOICE.xcodeproj \
          -scheme ${{ matrix.scheme }} \
          -destination 'platform=iOS Simulator,name=${{ env.IOS_SIMULATOR }},OS=${{ env.IOS_VERSION }}' \
          -derivedDataPath DerivedData \
          -enableCodeCoverage YES \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          | xcpretty && exit ${PIPESTATUS[0]}
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.scheme }}
        path: DerivedData/Logs/Test/*.xcresult
        retention-days: 7
    
    - name: Generate code coverage report
      if: success()
      run: |
        xcrun xccov view --report --json DerivedData/Logs/Test/*.xcresult > coverage.json
        echo "Code coverage report generated"
    
    - name: Upload coverage report
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-${{ matrix.scheme }}
        path: coverage.json
        retention-days: 7

  lint:
    name: SwiftLint
    runs-on: macos-13
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install SwiftLint
      run: brew install swiftlint
      
    - name: Run SwiftLint
      run: |
        swiftlint lint --reporter github-actions-logging || true

  build-release:
    name: Build Release
    runs-on: macos-13
    if: github.ref == 'refs/heads/main'
    needs: [build-and-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ env.XCODE_VERSION }}
    
    - name: Build Release
      run: |
        xcodebuild archive \
          -project VOICE/VOICE.xcodeproj \
          -scheme VOICE-Prod \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath build/VOICE.xcarchive \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          | xcpretty && exit ${PIPESTATUS[0]}
    
    - name: Upload archive
      uses: actions/upload-artifact@v3
      with:
        name: VOICE-archive
        path: build/VOICE.xcarchive
        retention-days: 30

