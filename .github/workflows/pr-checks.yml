name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    name: PR Validation
    runs-on: macos-13
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Check commit messages
      run: |
        echo "Checking commit messages follow conventional commits..."
        git log --format=%s origin/${{ github.base_ref }}..HEAD | \
          grep -E '^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .+' || \
          (echo "‚ùå Commit messages must follow conventional commits format" && exit 1)
        echo "‚úÖ All commit messages are valid"
    
    - name: Check for merge conflicts
      run: |
        if git diff --name-only --diff-filter=U | grep -q .; then
          echo "‚ùå Merge conflicts detected"
          exit 1
        fi
        echo "‚úÖ No merge conflicts"
    
    - name: Check file sizes
      run: |
        echo "Checking for large files..."
        if git diff --name-only origin/${{ github.base_ref }}..HEAD | \
           xargs ls -l 2>/dev/null | \
           awk '$5 > 1048576 {print; exit 1}'; then
          echo "‚úÖ No large files detected"
        else
          echo "‚ùå Files larger than 1MB detected"
          exit 1
        fi

  code-quality:
    name: Code Quality
    runs-on: macos-13
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Count lines of code
      run: |
        echo "üìä Lines of Code Statistics"
        echo "=========================="
        find VOICE/VOICE -name "*.swift" -exec wc -l {} + | tail -1
    
    - name: Check for TODOs
      run: |
        echo "üîç Checking for TODO comments..."
        TODO_COUNT=$(grep -r "TODO" --include="*.swift" VOICE/ | wc -l)
        echo "Found $TODO_COUNT TODO comments"
        if [ $TODO_COUNT -gt 50 ]; then
          echo "‚ö†Ô∏è  Warning: High number of TODO comments"
        fi
    
    - name: Check for print statements
      run: |
        echo "üîç Checking for print statements..."
        PRINT_COUNT=$(grep -r "print(" --include="*.swift" VOICE/VOICE/Presentation VOICE/VOICE/Domain VOICE/VOICE/Data | wc -l)
        if [ $PRINT_COUNT -gt 0 ]; then
          echo "‚ö†Ô∏è  Warning: Found $PRINT_COUNT print statements (use Logger instead)"
        else
          echo "‚úÖ No print statements found"
        fi

